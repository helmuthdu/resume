{"version":3,"sources":["components/SidebarMenu/SidebarMenu.jsx","layouts/DefaultLayout.jsx","components/HeaderMenu/HeaderMenu.jsx"],"names":["SidebarMenu","items","pathname","visible","toggleSidebar","isActive","item","exact","path","startsWith","activeItem","find","Sidebar","as","Menu","vertical","animation","inverted","map","active","Item","Link","to","key","onClick","Icon","name","icon","defaultProps","connect","state","ui","isSidebarVisible","dispatch","bindActionCreators","menuItems","DefaultLayout","calculations","direction","height","width","topPassed","bottomPassed","pixelsPassed","percentagePassed","topVisible","bottomVisible","fits","passing","onScreen","offScreen","handleUpdate","e","setState","this","props","children","location","isHome","HeaderMenu","filter","index","fixed","Pushable","Segment","Pusher","style","minHeight","Visibility","onUpdate","position","bottom","Container","textAlign","PureComponent","DefaultLayoutRoute","Component","component","rest","render","matchProps","pointing","secondary","size","borderWidth","className"],"mappings":"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","file":"static/js/6.f7228565.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { Icon, Menu, Sidebar } from 'semantic-ui-react';\nimport { toggleSidebar } from '../../store/modules/ui';\n\nexport const SidebarMenu = ({ items, pathname, visible, toggleSidebar }) => {\n  const isActive = item => (item.exact ? pathname === item.path : pathname.startsWith(item.path));\n  const activeItem = items.find(item => isActive(item)) || {};\n  return (\n    <Sidebar as={Menu} visible={visible} vertical animation=\"uncover\" inverted={activeItem.inverted}>\n      {items.map(item => {\n        const active = isActive(item);\n        return (\n          <Menu.Item as={Link} to={item.path} active={active} key={item.path} onClick={toggleSidebar}>\n            <Icon name={item.icon} />\n            {item.name}\n          </Menu.Item>\n        );\n      })}\n    </Sidebar>\n  );\n};\n\nconst mapStateToProps = state => ({\n  visible: state.ui.isSidebarVisible\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      toggleSidebar\n    },\n    dispatch\n  );\n\nSidebarMenu.propTypes = {\n  items: PropTypes.array.isRequired,\n  pathname: PropTypes.string.isRequired,\n  toggleSidebar: PropTypes.func.isRequired,\n  visible: PropTypes.bool\n};\n\nSidebarMenu.defaultProps = {\n  items: [],\n  visible: false\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SidebarMenu);\n","import 'prismjs/themes/prism-okaidia.css';\nimport PropTypes from 'prop-types';\nimport React, { Fragment, PureComponent } from 'react';\nimport { Route } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.css';\nimport { Container, Icon, Segment, Sidebar, Visibility } from 'semantic-ui-react';\nimport HeaderMenu from '../components/HeaderMenu/HeaderMenu';\nimport SidebarMenu from '../components/SidebarMenu/SidebarMenu';\nimport './DefaultLayout.css';\nimport './ResponsiveLayout.css';\n\nexport const menuItems = [\n  { name: 'Home', path: '/', exact: true, icon: 'home', inverted: true },\n  { name: 'About', path: '#about', exact: false, icon: 'info circle' },\n  { name: 'Resume', path: '#resume', exact: false, icon: 'newspaper' },\n  { name: 'Portfolio', path: '#portfolio', exact: false, icon: 'newspaper' },\n  { name: 'Contact', path: '#contact', exact: false, icon: 'newspaper' }\n];\n\nexport class DefaultLayout extends PureComponent {\n  state = {\n    calculations: {\n      direction: 'none',\n      height: 0,\n      width: 0,\n      topPassed: false,\n      bottomPassed: false,\n      pixelsPassed: 0,\n      percentagePassed: 0,\n      topVisible: false,\n      bottomVisible: false,\n      fits: false,\n      passing: false,\n      onScreen: false,\n      offScreen: false\n    }\n  };\n\n  handleUpdate = (e, { calculations }) => {\n    this.setState({ calculations });\n  };\n\n  render() {\n    const { pathname } = this.props.children.props.location;\n    const isHome = pathname === '/';\n\n    return (\n      <Fragment>\n        <HeaderMenu\n          pathname={pathname}\n          items={menuItems.filter((item, index) => index > 0)}\n          fixed=\"top\"\n          visible={this.state.calculations.pixelsPassed >= 300 && this.state.calculations.width > 748}\n        />\n        <Sidebar.Pushable as={Segment}>\n          <SidebarMenu pathname={pathname} items={menuItems} />\n          <Sidebar.Pusher style={{ minHeight: '100vh' }}>\n            <Visibility onUpdate={this.handleUpdate}>\n              {/* Header */}\n              {isHome ? null : <HeaderMenu pathname={pathname} items={menuItems} />}\n\n              {/* Render children pages */}\n              {this.props.children}\n\n              {/* Footer */}\n              <Segment inverted vertical style={{ position: 'fixed', bottom: 0, width: '100%' }}>\n                <Container textAlign=\"center\">\n                  <p>\n                    Powered with <Icon name=\"heart\" /> by React\n                  </p>\n                </Container>\n              </Segment>\n            </Visibility>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </Fragment>\n    );\n  }\n}\n\nexport const DefaultLayoutRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <DefaultLayout>\n          <Component {...matchProps} />\n        </DefaultLayout>\n      )}\n    />\n  );\n};\n\nDefaultLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default DefaultLayoutRoute;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { Container, Menu } from 'semantic-ui-react';\nimport { toggleSidebar } from '../../store/modules/ui';\n\nexport const HeaderMenu = ({ fixed, inverted, items, pathname, pointing, secondary, toggleSidebar, visible }) => (\n  <Menu\n    size=\"large\"\n    pointing={pointing}\n    secondary={secondary}\n    inverted={inverted}\n    style={{ borderWidth: '0px' }}\n    fixed={fixed}\n    className={visible ? '' : 'hidden'}>\n    <Container>\n      <Menu.Item as=\"a\" className=\"mobile only\" icon=\"sidebar\" onClick={toggleSidebar} />\n      {items.map(item => {\n        const active = item.exact ? pathname === item.path : pathname.startsWith(item.path);\n        return (\n          <Menu.Item\n            as={Link}\n            className=\"mobile hidden\"\n            name={item.name}\n            to={item.path}\n            key={item.path}\n            active={active}\n          />\n        );\n      })}\n    </Container>\n  </Menu>\n);\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      toggleSidebar\n    },\n    dispatch\n  );\n\nHeaderMenu.propTypes = {\n  fixed: PropTypes.string,\n  inverted: PropTypes.bool,\n  items: PropTypes.array,\n  pathname: PropTypes.string.isRequired,\n  pointing: PropTypes.bool,\n  secondary: PropTypes.bool,\n  toggleSidebar: PropTypes.func.isRequired,\n  visible: PropTypes.bool\n};\n\nHeaderMenu.defaultProps = {\n  fixed: 'top',\n  inverted: false,\n  items: [],\n  pointing: false,\n  secondary: false,\n  visible: false\n};\n\nexport default connect(null, mapDispatchToProps)(HeaderMenu);\n"],"sourceRoot":""}